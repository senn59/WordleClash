@page "{username?}"
@using WordleClash.Core
@model WordleClash.Web.Pages.User.IndexModel

@{
    Layout = "Shared/_Layout";
}
@section Styles
{
    <link rel="stylesheet" href="~/css/pages/user.css" asp-append-version="true" />
}
<div class="page__container">
    <div class="user__container">
        <div class="user-top__container">
            <h1 contenteditable="true" class="user__name" id="username">@Model.User.Name</h1>
            <button onclick="focusEditableContent()">edit</button>
            <form hx-post="@Url.Page("/User/Index", "UpdateName")"
                  hx-target="#username"
                  hx-trigger="enter"
                  id="usernameChangeForm"
                  method="post">
                <input type="hidden" name="NewUsername" id="usernameInput"/>
            </form>
        </div>
        <div class="user__seperator"></div>
        <table class="game-log__table">
            <tr>
                <th>WORD</th>
                <th>ATTEMPTS</th>
                <th>TIME</th>
                <th>DATE</th>
                <th>STATUS</th>
            </tr>
            @foreach (var log in Model.User.GameHistory)
            {
                var status = log.Status.ToString().ToUpper();
                <tr class="log">
                    <td>@log.Word</td>
                    <td>@log.AttemptCount</td>
                    <td>@(log.Time.HasValue ? log.Time : "N/A")</td>
                    <td>@GameLog.GetTimeDifference(log.Date)</td>
                    <td class="@status">@status</td>
                </tr>
                <tr class="break"></tr>
            }
        </table>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">
        const usernameEl = document.getElementById("username");
        const usernameInputEl = document.getElementById("usernameInput");
        const form = document.getElementById("usernameChangeForm");
        let originalName = usernameEl.innerText;
        let newName = "";
        function focusEditableContent() {
            usernameEl.contentEditable = true;
            usernameEl.focus();
            const range = document.createRange();
            const selection = window.getSelection();
            range.selectNodeContents(usernameEl);
            range.collapse(false);
            selection.removeAllRanges();
            selection.addRange(range);
        }
        usernameEl.addEventListener('keydown', function(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                usernameEl.contentEditable = false;
                usernameInputEl.value = usernameEl.innerText
                newName = usernameEl.innerText.trim();
                if (newName === originalName) return;
                htmx.trigger("#usernameChangeForm", "enter");
            }
            
            if (event.ctrlKey && event.key === 'v' || event.metaKey && event.key === 'v') {
                event.preventDefault();
                return;
            }
            
            if (event.key.length === 1 && !/[a-zA-Z0-9._^*()!$]/.test(event.key)) {
                event.preventDefault();
            }
        })
        
        document.body.addEventListener('htmx:afterOnLoad', (event) => {
            if (event.target.id === 'usernameChangeForm') {
                if (usernameEl.innerText !== newName) {
                    setTimeout(() => {
                        usernameEl.innerHTML = originalName;
                    }, 2000);
                } else {
                    changeUrl(newName);
                    originalName = newName;
                    newName = "";
                }
            }
        });
        const changeUrl = (username) => {
            let thisUrl = window.location.href;
            let urlArr = thisUrl.split("/");
            urlArr[urlArr.length - 1] = username;
            window.history.replaceState(null, "", urlArr.join("/"));
        }
    </script>
}
